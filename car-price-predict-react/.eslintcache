[{"C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\React Trials\\electron-react-app\\src\\index.js":"1","C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\React Trials\\electron-react-app\\src\\App.js":"2","C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\React Trials\\electron-react-app\\src\\reportWebVitals.js":"3","C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\car-reco-sac\\car-price-predict-react\\src\\index.js":"4","C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\car-reco-sac\\car-price-predict-react\\src\\App.js":"5","C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\car-reco-sac\\car-price-predict-react\\src\\EvaluateCarPrice\\EvaluateCarPrice.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":539,"mtime":1610185665372,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":176,"mtime":1611673895063,"results":"11","hashOfConfig":"12"},{"size":858,"mtime":1611674858533,"results":"13","hashOfConfig":"12"},{"size":10184,"mtime":1611685995627,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"3qzmv",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1twnkm2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\React Trials\\electron-react-app\\src\\index.js",[],["30","31"],"C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\React Trials\\electron-react-app\\src\\App.js",[],"C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\React Trials\\electron-react-app\\src\\reportWebVitals.js",[],"C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\car-reco-sac\\car-price-predict-react\\src\\index.js",[],["32","33"],"C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\car-reco-sac\\car-price-predict-react\\src\\App.js",[],"C:\\Users\\Rares Zaharescu\\Documents\\Workspace\\car-reco-sac\\car-price-predict-react\\src\\EvaluateCarPrice\\EvaluateCarPrice.js",["34","35"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Tab } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\n\r\nconst EvaluateCarPrice = () => {\r\n    const classes = useStyles();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [price, setPrice] = useState(null);\r\n\r\n    const [make, setMake] = useState('');\r\n    const [model, setModel] = useState('');\r\n    const [year, setYear] = useState('');\r\n    const [mileage, setMileage] = useState('');\r\n    const [fuelType, setFuelType] = useState('');\r\n    const [engineCapacity, setEngineCapacity] = useState('');\r\n    const [cylinders, setCylinders] = useState('');\r\n\r\n    const [similarCars, setSimilarCars] = useState([])\r\n\r\n    const makeChangeHandler = (event) => {\r\n        setMake(event.target.value);\r\n    }\r\n\r\n    const modelChangeHandler = (event) => {\r\n        setModel(event.target.value);\r\n    }\r\n\r\n    const yearChangeHandler = (event) => {\r\n        setYear(event.target.value);\r\n    }\r\n\r\n    const mileageChangeHandler = (event) => {\r\n        setMileage(event.target.value);\r\n    }\r\n\r\n    const fuelTypeChangeHandler = (event) => {\r\n        setFuelType(event.target.value);\r\n    }\r\n\r\n    const engineCapacityChangeHandler = (event) => {\r\n        setEngineCapacity(event.target.value);\r\n    }\r\n\r\n    const cylindersChangeHandler = (event) => {\r\n        setCylinders(event.target.value);\r\n    }\r\n\r\n    const evaluateButtonHandler = async () => {\r\n        const requestBody = {\r\n            'make': make,\r\n            'model': model,\r\n            'year': year,\r\n            'mileage': mileage,\r\n            'fuelType': fuelType,\r\n            'engineCapacity': engineCapacity,\r\n            'cylinders': cylinders\r\n        }\r\n        console.log('request body: ', requestBody);\r\n\r\n        setLoading(true);\r\n        const response = await axios.post('http://localhost:5000/evaluate_price', requestBody);\r\n        const retreivedPrice = String(response.data.price);\r\n\r\n        const parsedPrice = retreivedPrice.split('.')\r\n\r\n        setLoading(false);\r\n        setPrice(parsedPrice[0]);\r\n    }\r\n\r\n    const recommendationsButtonHandler = async () => {\r\n        const requestBody = {\r\n            'make': make,\r\n            'model': model,\r\n            'year': year,\r\n            'price': price\r\n        }\r\n\r\n        console.log('request body: ', requestBody)\r\n\r\n        const response = await axios.post('http://localhost:5000/get_recommendations', requestBody);\r\n        setSimilarCars(response.data.cars)\r\n        console.log('recommendations: ', response.data.cars);\r\n    }\r\n\r\n    const similarCarsColumns = [\r\n        {field: 'make', headerName: 'Make'},\r\n        {field: 'model', headerName: 'Model'},\r\n        {field: 'year', headerName: 'Year'},\r\n        {field: 'mileage', headerName: 'Mileage'},\r\n        {field: 'fuelType', headerName: 'FuelType'},\r\n        {field: 'engineCapacity', headerName: 'EngineCapacity'},\r\n        {field: 'price', headerName: 'Price'}\r\n    ]\r\n\r\n    return (\r\n        <Grid container spacing={3} style={{ maxWidth: '90vw', marginLeft: 'auto', marginRight: 'auto', marginTop: '3vh' }}>\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.paper} elevation={3} style={{ fontWeight: 'bold' }}>\r\n                    Please fill the form below\r\n                    </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.paper}>\r\n                    <div>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            value={make}\r\n                            onChange={makeChangeHandler}\r\n                            label=\"Make\"\r\n                            placeholder=\"Make\" />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            value={model}\r\n                            onChange={modelChangeHandler}\r\n                            label=\"Model\"\r\n                            placeholder=\"Model\" />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            value={year}\r\n                            onChange={yearChangeHandler}\r\n                            label=\"Year\"\r\n                            placeholder=\"Year\" />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            value={mileage}\r\n                            onChange={mileageChangeHandler}\r\n                            label=\"Mileage\"\r\n                            placeholder=\"Mileage\" />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            value={fuelType}\r\n                            onChange={fuelTypeChangeHandler}\r\n                            label=\"Fuel Type\"\r\n                            placeholder=\"Fuel Type\" />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            value={engineCapacity}\r\n                            onChange={engineCapacityChangeHandler}\r\n                            label=\"Engine Capacity\"\r\n                            placeholder=\"Engine Capacity\" />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            value={cylinders}\r\n                            onChange={cylindersChangeHandler}\r\n                            label=\"Cylinders\"\r\n                            placeholder=\"Cylinders\" />\r\n                    </div>\r\n                    <div style={{ marginTop: '1vh' }}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={evaluateButtonHandler}>\r\n                            EVALUATE\r\n                            </Button>\r\n\r\n                    </div>\r\n                </Paper>\r\n                {\r\n                    loading ?\r\n                        <Paper className={classes.paper}>\r\n                            Loading.....\r\n                            </Paper>\r\n                        :\r\n                        price != null ?\r\n                            <Paper className={classes.paper}>\r\n                                <p style={{ fontWeight: 'bold' }}>Predicted price: {price} €</p>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={recommendationsButtonHandler}>\r\n                                    CHECK SIMILAR CARS\r\n                                    </Button>\r\n                            </Paper>\r\n                            :\r\n                            null\r\n\r\n                }\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                {\r\n                    similarCars.length > 0 ?\r\n                        <Paper className={classes.paper}>\r\n                           <TableContainer component={Paper} style={{maxHeight: '30vh'}}>\r\n                                <Table aria-label=\"a dense table\" stickyHeader >\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Make</TableCell>\r\n                                            <TableCell>Model</TableCell>\r\n                                            <TableCell>Year</TableCell>\r\n                                            <TableCell>Mileage</TableCell>\r\n                                            <TableCell>FuelType</TableCell>\r\n                                            <TableCell>Engine Capacity</TableCell>\r\n                                            <TableCell>Cylinders</TableCell>\r\n                                            <TableCell>Price</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            similarCars.map(car => (\r\n                                                <TableRow>\r\n                                                    <TableCell>{car.make}</TableCell>\r\n                                                    <TableCell>{car.model}</TableCell>\r\n                                                    <TableCell>{car.year}</TableCell>\r\n                                                    <TableCell>{car.mileage}</TableCell>\r\n                                                    <TableCell>{car.fuelType}</TableCell>\r\n                                                    <TableCell>{car.engineCapacity}</TableCell>\r\n                                                    <TableCell>{car.cylinders}</TableCell>\r\n                                                    <TableCell>{car.price}</TableCell>\r\n                                                </TableRow>\r\n                                            ))\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                           </TableContainer>\r\n                        </Paper>\r\n                    :\r\n                        null\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default EvaluateCarPrice\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"36","replacedBy":"40"},{"ruleId":"38","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":14,"column":10,"nodeType":"44","messageId":"45","endLine":14,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":109,"column":11,"nodeType":"44","messageId":"45","endLine":109,"endColumn":29},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],["47"],["48"],"no-unused-vars","'Tab' is defined but never used.","Identifier","unusedVar","'similarCarsColumns' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]